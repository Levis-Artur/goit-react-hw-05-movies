{"version":3,"file":"static/js/779.1f4e41b1.chunk.js","mappings":"oRAEaA,EAAYC,EAAAA,GAAAA,GAAH,uGAOTC,EAAUD,EAAAA,GAAAA,GAAH,kF,2BCkCpB,EApCgB,WACZ,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAGMC,GAAoBC,EAAAA,EAAAA,cAAW,iBAAC,8GAEbC,EAAAA,EAAAA,IAAa,GAAD,OAAIT,EAAJ,aAFC,UAE5BU,EAF4B,6BAGf,IAAIC,MAAM,wBAHK,OAIlCP,EAAcM,EAAOE,SAJa,gDAFtBC,EAQJ,EAAD,GARYC,IAAAA,OAAAA,QAAwBD,EAAIE,SAEb,yBAQ9BV,GAAaC,GAAe,GARE,uDAFtB,IAAAO,CAEsB,6BAUnC,CAACb,EAASK,IAMb,OAJAW,EAAAA,EAAAA,YAAU,WACRT,GACD,GAAE,CAACA,KAGA,+BACEF,IAAiBF,EAAWc,OAAO,GAC9B,SAACpB,EAAD,UACIM,EAAWe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,UAACtB,EAAD,YACI,0CAAgBqB,MAChB,uBAAIC,MAFMF,EADF,OAMF,uBAAG,+CAGlC,C,+ICtCKG,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAHZ,yNAEd,SAKeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,qJAEoBC,EAAAA,EAAAA,IAFpB,kDAEmCJ,GAFnC,cAEQK,EAFR,yBAGSA,EAAIC,KAAKhB,SAHlB,2EAOeiB,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gFACQC,EADR,2DACkED,EADlE,cAEoBJ,EAAAA,EAAAA,IAAUK,EAAKT,GAFnC,cAEQK,EAFR,yBAGSA,EAAIC,KAAKhB,SAHlB,2EAOeH,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA4BT,GAA5B,gFAEQ+B,EAFR,6CAEoD/B,GAFpD,SAGoB0B,EAAAA,EAAAA,IAAUK,EAAKT,GAHnC,cAGQK,EAHR,yBAISA,EAAIC,MAJb,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.ul`\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Wrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\n;\n","import Notiflix from 'notiflix';\nimport 'notiflix/src/notiflix.css';\nimport { useParams } from \"react-router-dom\";\nimport { Container, Wrapper } from \"./Reviews.styled\";\nimport { getMovieById } from \"../../service/api\";\nimport { useState, useEffect, useCallback } from \"react\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviewList, setReviewList] = useState([]);\n    const [firstRender, setFirstRender] = useState(true);\n    const onError = err => Notiflix.Notify.failure(err.message);\n    \n    const fetchMovieReviews = useCallback(async () => {\n      try {\n        const result = await getMovieById(`${movieId}/reviews`)\n        if (!result) throw new Error(\"Sorry, no data cast.\");\n        setReviewList(result.results)\n      } catch (error) {\n        onError(error)\n      } finally {\n        if (firstRender) setFirstRender(false)\n      };\n    }, [movieId, firstRender])\n    \n    useEffect(() => {\n      fetchMovieReviews()\n    }, [fetchMovieReviews]); \n\n    return (\n        <>\n        {!firstRender && ( reviewList.length>0 ?\n              (<Container >\n                  {reviewList.map(({ id, author, content }) => (\n                      <Wrapper key={id}>\n                          <h3>{`Author: ${author}`}</h3>\n                          <p>{content}</p>\n                      </Wrapper>\n                  ))}\n              </Container >) : (<p>We don't have any reviews for this movie</p>))}\n        </>\n    )\n}\nexport default Reviews;","import axios from 'axios';\n// const API_KEY = \"0baa7cdb523c5e7ac9d70a232fc0ebec\"\nconst token = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYmFhN2NkYjUyM2M1ZTdhYzlkNzBhMjMyZmMwZWJlYyIsInN1YiI6IjY0Y2E1MzFmZDM3MTk3MDEzOTc4YjNlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RBHU2kDT3Swele15gvAopB0TouomeG_bY1uLDLfirLg';\n\nconst config = {\n  headers: { Authorization: `Bearer ${token}` }\n};\n\n\nasync function getTrending() {\n  const url = `https://api.themoviedb.org/3/trending/movie/day`;\n  const res = await axios.get(url, config);\n  return res.data.results;\n  // id, title, backdrop_path (jpg), poster_path\n}\n\nasync function getMovies(query) {\n  const url = `https://api.themoviedb.org/3/search/movie?query=\"${query}\"`;\n  const res = await axios.get(url, config);\n  return res.data.results;\n  // id, title, backdrop_path (jpg), poster_path\n}\n\nasync function getMovieById(movieId) {\n  // 615656\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const res = await axios.get(url, config);\n  return res.data;\n  // genres, overview, title, vote_average, release_date, poster_path, backdrop_path\n  \n  // cast //\n  // name, profile_path\n\n  // reviews //\n// author, content\n}\n\n\n// https://api.themoviedb.org/3/trending/movie/i2GVEvltEu3BXn5crBSxgKuTaca.jpg\n// src=\"https://themoviedb.org/t/p/w220_and_h330_face/i2GVEvltEu3BXn5crBSxgKuTaca.jpg\">\n// https://themoviedb.org/t/p/w220_and_h330_face/uS1AIL7I1Ycgs8PTfqUeN6jYNsQ.jpg\n\n// https://www.themoviedb.org/t/p/w300_and_h450_bestv2/vbvcvIxXywM6rP1ayoz3AxE83oe.jpg\n\n// by id\n//poster https://www.themoviedb.org/t/p/w300_and_h450_bestv2/4m1Au3YkjqsxF8iwQy0fPYSxE0h.jpg\n\n//backdrop https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/zN41DPmPhwmgJjHwezALdrdvD0h.jpg\n\nexport { getTrending, getMovies, getMovieById };"],"names":["Container","styled","Wrapper","movieId","useParams","useState","reviewList","setReviewList","firstRender","setFirstRender","fetchMovieReviews","useCallback","getMovieById","result","Error","results","err","Notiflix","message","useEffect","length","map","id","author","content","config","headers","Authorization","getTrending","axios","res","data","getMovies","query","url"],"sourceRoot":""}