{"version":3,"file":"static/js/774.66c94420.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","service/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n  overflow: hidden;\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { Container, CardWrapper, MovieName } from \"./MoviesList.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const MoviesList = ({ movies }) => {\n  const baseUrl = 'https://themoviedb.org/t/p/w220_and_h330_face'  \n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n  const location = useLocation()\n   const { pathname } = location\n  return (\n    <Container>\n      {movies.map(({id, poster_path, title}) => (\n        <CardWrapper key={id}>\n          <Link to={pathname.endsWith(\"/movies\") ? `${id}` : `movies/${id}`} state={{ from: location }}>\n            <img src={ poster_path ? `${baseUrl}${poster_path}`: defaultImg} alt=\"\" />\n            <MovieName>{title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired\n}","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\nexport const Button = styled.button`\n  position: absolute;\n  right: 2px;\n  height: 90%;\n  width: 40px;\n  background-color: lightcyan;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 0;\n  border-left: 2px solid;    \n border-radius: 0px 4px 4px 0px;    \n \n  cursor: pointer;\n  :hover{\n    background-color: lightskyblue;\n }\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n\n`;\n","import { Form, Input, Icon, Button } from \"./SearchBox.styled\";\nimport { useState } from \"react\";\nimport Notiflix from 'notiflix';\nimport 'notiflix/src/notiflix.css';\nimport PropTypes from \"prop-types\";\n\nexport const SearchBox = ({ onSubmit }) => {\n    const [value, setValue] = useState(\"\")\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!value.trim()) return Notiflix.Notify.failure(`Fill the search field`);\n        onSubmit(value)\n        setValue(\"\")\n    }\n  return (\n      <Form onSubmit={handleSubmit}>\n      <Button type=\"submit\">\n              <Icon />\n        </Button>          \n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}","import Notiflix from 'notiflix';\nimport 'notiflix/src/notiflix.css';\nimport { useSearchParams } from \"react-router-dom\";\nimport {useState, useEffect, useCallback} from 'react'\nimport { SearchBox } from \"../components/SearchBox/SearchBox\";\nimport { getMovies } from \"../service/api\";\nimport { MoviesList } from \"../components/MoviesList/MoviesList\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n    const query = searchParams.get(\"query\") ?? \"\";\n  const onError = err => Notiflix.Notify.failure(err.message)\n  \n  const fetchMovies = useCallback(async () => {\n    try {\n      const result = await getMovies(query)\n      if (!result) throw new Error(\"Sorry, no data movies.\");\n      setMovies(result)\n    } catch (error) {\n      onError(error)\n    };\n  }, [query])\n\n  const updateQueryString = (query) => {\n    const nextParams = query !== \"\" ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n   fetchMovies()\n  }, [fetchMovies]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={updateQueryString} />\n      {movies.length>0 && <MoviesList movies={movies} />}\n     </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n// const API_KEY = \"0baa7cdb523c5e7ac9d70a232fc0ebec\"\nconst token = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYmFhN2NkYjUyM2M1ZTdhYzlkNzBhMjMyZmMwZWJlYyIsInN1YiI6IjY0Y2E1MzFmZDM3MTk3MDEzOTc4YjNlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RBHU2kDT3Swele15gvAopB0TouomeG_bY1uLDLfirLg';\n\nconst config = {\n  headers: { Authorization: `Bearer ${token}` }\n};\n\n\nasync function getTrending() {\n  const url = `https://api.themoviedb.org/3/trending/movie/day`;\n  const res = await axios.get(url, config);\n  return res.data.results;\n  // id, title, backdrop_path (jpg), poster_path\n}\n\nasync function getMovies(query) {\n  const url = `https://api.themoviedb.org/3/search/movie?query=\"${query}\"`;\n  const res = await axios.get(url, config);\n  return res.data.results;\n  // id, title, backdrop_path (jpg), poster_path\n}\n\nasync function getMovieById(movieId) {\n  // 615656\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const res = await axios.get(url, config);\n  return res.data;\n  // genres, overview, title, vote_average, release_date, poster_path, backdrop_path\n  \n  // cast //\n  // name, profile_path\n\n  // reviews //\n// author, content\n}\n\n\n// https://api.themoviedb.org/3/trending/movie/i2GVEvltEu3BXn5crBSxgKuTaca.jpg\n// src=\"https://themoviedb.org/t/p/w220_and_h330_face/i2GVEvltEu3BXn5crBSxgKuTaca.jpg\">\n// https://themoviedb.org/t/p/w220_and_h330_face/uS1AIL7I1Ycgs8PTfqUeN6jYNsQ.jpg\n\n// https://www.themoviedb.org/t/p/w300_and_h450_bestv2/vbvcvIxXywM6rP1ayoz3AxE83oe.jpg\n\n// by id\n//poster https://www.themoviedb.org/t/p/w300_and_h450_bestv2/4m1Au3YkjqsxF8iwQy0fPYSxE0h.jpg\n\n//backdrop https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/zN41DPmPhwmgJjHwezALdrdvD0h.jpg\n\nexport { getTrending, getMovies, getMovieById };"],"names":["Container","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","pathname","map","id","poster_path","title","to","endsWith","state","from","src","alt","Form","Input","Button","Icon","HiSearch","SearchBox","onSubmit","useState","value","setValue","e","preventDefault","trim","Notiflix","type","onChange","target","useSearchParams","searchParams","setSearchParams","setMovies","query","get","fetchMovies","useCallback","getMovies","result","Error","err","message","useEffect","length","config","headers","Authorization","getTrending","axios","res","data","results","url","getMovieById","movieId"],"sourceRoot":""}